Freezing layer 'model.22.dfl.conv.weight'
[34m[1mAMP: [39m[22mrunning Automatic Mixed Precision (AMP) checks with YOLOv8n...
Traceback (most recent call last):
  File "E:\homework\è³‡è¨Šå®‰å…¨å°Žè«–\pythonProject2\MVCweek4\trainYolo.py", line 8, in <module>
    results = model.train(data="E:\homework\MVClab\week4\k-street-food\data.yaml", epochs=100, imgsz=640)
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\engine\model.py", line 674, in train
    self.trainer.train()
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\engine\trainer.py", line 199, in train
    self._do_train(world_size)
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\engine\trainer.py", line 313, in _do_train
    self._setup_train(world_size)
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\engine\trainer.py", line 257, in _setup_train
    self.amp = torch.tensor(check_amp(self.model), device=self.device)
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\utils\checks.py", line 660, in check_amp
    assert amp_allclose(YOLO("yolov8n.pt"), im)
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\utils\checks.py", line 647, in amp_allclose
    a = m(im, device=device, verbose=False)[0].boxes.data  # FP32 inference
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\engine\model.py", line 177, in __call__
    return self.predict(source, stream, **kwargs)
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\engine\model.py", line 446, in predict
    self.predictor.setup_model(model=self.model, verbose=is_cli)
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\engine\predictor.py", line 297, in setup_model
    self.model = AutoBackend(
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\torch\autograd\grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\nn\autobackend.py", line 144, in __init__
    model = model.fuse(verbose=verbose)
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\nn\tasks.py", line 184, in fuse
    m.conv = fuse_conv_and_bn(m.conv, m.bn)  # update conv
  File "E:\Anaconda\envs\federated_learning\lib\site-packages\ultralytics\utils\torch_utils.py", line 199, in fuse_conv_and_bn
    fusedconv.weight.copy_(torch.mm(w_bn, w_conv).view(fusedconv.weight.shape))
